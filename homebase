#!/bin/bash

# Logging stuff.
function e_header()   { echo -e "\n\033[1m$@\033[0m"; }
function e_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
function e_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }
function e_arrow()    { echo -e " \033[1;33m➜\033[0m  $@"; }

# Ensure that we can actually, like, compile anything.
if [[ ! "$(type -P gcc)" && "$OSTYPE" =~ ^darwin ]]; then
  xcode-select --install
fi

if [[ ! "$(type -P brew)" && "$OSTYPE" =~ ^darwin ]]; then
     e_header "Installing Homebrew"
     true | /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
     
fi

if [[ "$(type -P brew)" ]]; then
    e_success "homebrew installed"
fi

if [[ ! "$(type -P git)" && "$OSTYPE" =~ ^darwin ]]; then
     e_header "installing git"
     brew install git
fi

if [[ ! "$(type -P git)" && "$(type -P yum)" ]]; then
     e_header "installing git"
     yum install git
fi

if [[ ! "$(type -P git)" && "$(type -P apt-get)" ]]; then
     e_header "installing git"
     apt-get install git
fi

if [[ "$(type -P git)" ]]; then
    e_success "git installed"
fi

e_arrow "cloning home"
if [ ! -d ~/homebase ]; then
	git clone https://github.com/3nth/homebase ~/homebase
fi

cd ~/homebase && git pull

if [[ ! "$(type -P pip3)" && "$OSTYPE" =~ ^darwin ]]; then
     e_header "installing python"
     brew install python
     pip3 install --upgrade pip
     pip3 install --upgrade setuptools
     pip3 install --upgrade virtualenv
fi

if [[ ! "$(type -P dotfiles)" ]]; then
     e_header "Installing dotfiles"
        pip3 install dotfiles
fi
 
e_arrow "dotfiles, yo!"
dotfiles -C ~/homebase/dotfiles/dotfilesrc -s -f
dotfiles -l

e_header "installing/updating python packages"
pip3 install --upgrade -r ~/.pip/stable.txt

if [[ "$(type -P brew)" && "$OSTYPE" =~ ^darwin ]]; then
    e_header "updating brew"
    brew update
    #brew tap Homebrew/bundle
    e_header "installing/updating formulae"
    brew bundle --global
    e_success "installed formulae"
	brew list
fi

e_header "vi or die."
if [ ! -e ~/.vim/bundle/vundle ]; then
    e_arrow "installing vundle"
	git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
fi

e_arrow "updating vundle"
cd ~/.vim/bundle/vundle && git pull

e_arrow "update bundles"
vim +BundleUpdate +qall -e

if [[ -e ~/.vim/bundle/YouCompleteMe/install.py && ! -e ~/.vim/bundle/YouCompleteMe/third_party/ycmd/ycm_core.so ]]; then
    e_arrow "YouCompleteMe"
	~/.vim/bundle/YouCompleteMe/install.py
fi

e_arrow "source"
source ~/.bashrc

e_success "Welcome Home"
