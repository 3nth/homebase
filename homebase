#!/bin/bash

# Logging stuff.
function e_header()   { echo -e "\n\033[1m$@\033[0m"; }
function e_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
function e_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }
function e_arrow()    { echo -e " \033[1;33m➜\033[0m  $@"; }

# Ensure that we can actually, like, compile anything.
if [[ ! "$(type -P gcc)" && "$OSTYPE" =~ ^darwin ]]; then
  e_error "The XCode Command Line Tools must be installed first."
  exit 1
fi

if [[ ! "$(type -P brew)" && "$OSTYPE" =~ ^darwin ]]; then
     e_header "Installing Homebrew"
     true | /usr/bin/ruby -e "$(/usr/bin/curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
fi

if [[ "$(type -P brew)" ]]; then
    e_success "homebrew installed"
fi

if [[ ! "$(type -P git)" && "$OSTYPE" =~ ^darwin ]]; then
     e_header "Installing git"
     brew install git
fi

if [[ ! "$(type -P git)" && "$(type -P yum)" ]]; then
     e_header "Installing git"
     yum install git
fi

if [[ ! "$(type -P git)" && "$(type -P apt-get)" ]]; then
     e_header "Installing git"
     apt-get install git
fi

if [[ "$(type -P git)" ]]; then
    e_success "git installed"
fi

e_arrow "Cloning home"
if [ ! -d ~/homebase ]; then
	git clone https://github.com/3nth/homebase ~/homebase
fi
cd ~/homebase && git pull

if [[ ! "$(type -P dotfiles)" ]]; then
     e_header "Installing dotfiles"
	 pip install dotfiles
 fi
 
e_arrow "dotfiles, yo!"
dotfiles -C ~/homebase/dotfiles/dotfilesrc -s -f
dotfiles -l

if [[ "$(type -P brew)" && "$OSTYPE" =~ ^darwin ]]; then
	e_header "Installing formulae"
	python ~/homebase/kegstand.py
	e_success "installed formulae:"
	brew list
fi

e_header "vi or die."
if [ ! -e ~/.vim/bundle/vundle ]; then
    e_arrow "installing vundle"
	git clone https://github.com/gmarik/vundle.git ~/.vim/bundle/vundle
fi

e_arrow "updating vundle"
cd ~/.vim/bundle/vundle && git pull

e_arrow "update bundles"
vim +BundleInstall +qall -e -s

e_arrow "pip list -o"
pip list -o

e_arrow "source"
source ~/.bashrc

e_success "Welcome Home!"
